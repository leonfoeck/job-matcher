// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id      Int       @id @default(autoincrement())
  name    String
  source  String
  domain  String?   @unique
  jobs    JobPost[]

  @@index([name])
}

model JobPost {
  id        Int      @id @default(autoincrement())
  companyId Int
  title     String
  url       String   @unique
  location  String?
  seniority String?
  postedAt  DateTime?
  scrapedAt DateTime @default(now())
  rawText   String   @db.Text @default("")
  processed Boolean  @default(false)
  company   Company  @relation(fields: [companyId], references: [id])

  @@index([postedAt])
  @@index([title])
  @@index([scrapedAt])
}


model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String?
  passwordHash  String
  createdAt     DateTime  @default(now())
  profile       Profile?
  favorites     Company[]
}

model Profile {
  id         Int          @id @default(autoincrement())
  userId     Int          @unique
  headline   String?
  summary    String?
  skills     String?      // csv
  projects   Project[]
  experiences Experience[]
  user       User         @relation(fields: [userId], references: [id])
}

model Project {
  id          Int      @id @default(autoincrement())
  profileId   Int
  name        String
  link        String?
  tech        String?
  description String[]  @default([])   // <- array of text
  profile     Profile  @relation(fields: [profileId], references: [id])
}

model Experience {
  id          Int      @id @default(autoincrement())
  profileId   Int
  company     String
  title       String
  start       String?
  end         String?
  description String[]  @default([])   // <- array of text
  tech        String?
  profile     Profile  @relation(fields: [profileId], references: [id])
}


